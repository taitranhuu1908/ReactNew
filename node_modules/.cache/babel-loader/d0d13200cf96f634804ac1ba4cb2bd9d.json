{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactNew\\\\ReactJS\\\\src\\\\Components\\\\AdminPage\\\\Admin\\\\Home\\\\Tasks\\\\TaskUsers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography, Box } from \"@material-ui/core\";\nimport * as actions from \"./../../../../../../Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskUsers() {\n  _s();\n\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const now = new moment();\n\n  const checkUsers = users => {\n    var result = null;\n    var count = 0;\n    users.map((user, index) => {\n      if (moment(user.date).fromNow().indexOf(\"hours ago\") !== -1) {\n        count++;\n      }\n    });\n    count === 0 ? result = false : result = true;\n    return result;\n  };\n\n  useEffect(() => {\n    dispatch(actions.acGetUsersRequest());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: checkUsers(users) ? users.map((user, index) => {\n          if (moment(user.date).fromNow().indexOf(\"hours ago\") !== -1) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this);\n          }\n        }) : /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 4,\n            children: \"No users have registered within the last 24 hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskUsers, \"N0SeCBd1xQV/Y3oSFyV14pCI5TA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskUsers\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactNew/ReactJS/src/Components/AdminPage/Admin/Home/Tasks/TaskUsers/index.js"],"names":["React","useEffect","useDispatch","useSelector","moment","Table","TableHead","TableBody","TableRow","TableCell","Typography","Box","actions","TaskUsers","users","state","dispatch","now","checkUsers","result","count","map","user","index","date","fromNow","indexOf","acGetUsersRequest","id","email","username"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport * as actions from \"./../../../../../../Actions\";\n\nexport default function TaskUsers() {\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n  const now = new moment();\n\n  const checkUsers = (users) => {\n    var result = null;\n    var count = 0;\n\n    users.map((user, index) => {\n      if (moment(user.date).fromNow().indexOf(\"hours ago\") !== -1) {\n        count++;\n      }\n    });\n\n    count === 0 ? (result = false) : (result = true);\n    return result;\n  };\n\n  useEffect(() => {\n    dispatch(actions.acGetUsersRequest());\n  }, []);\n\n  return (\n    <Box>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Username</TableCell>\n            <TableCell>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {checkUsers(users) ? (\n            users.map((user, index) => {\n              if (moment(user.date).fromNow().indexOf(\"hours ago\") !== -1) {\n                return (\n                  <TableRow key={index}>\n                    <TableCell>{user.id}</TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>{user.username}</TableCell>\n                    <TableCell>{user.date}</TableCell>\n                  </TableRow>\n                );\n              }\n            })\n          ) : (\n            <TableRow>\n              <TableCell colSpan={4}>\n                No users have registered within the last 24 hours\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}