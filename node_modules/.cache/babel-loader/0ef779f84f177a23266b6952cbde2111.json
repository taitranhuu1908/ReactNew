{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\LearnReact\\\\ReactJS-Project\\\\ReactJS\\\\ReactJS\\\\src\\\\Components\\\\LoginPage\\\\ContentLogin\\\\LoginForm.js\\\\LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport InputLogin from \"./IputLogin/InputLogin\";\nimport InputSignIn from \"./InputSignIn/InputSignIn\";\nimport \"./styles.scss\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./../../../../Actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeLogin = () => {\n      this.props.onChangeLogin();\n    };\n  }\n\n  render() {\n    var {\n      changeLogin,\n      match\n    } = this.props;\n    var url = match.url;\n    var slug = changeLogin ? \"register\" : \"login\";\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid px-0 py-5\",\n        id: \"wapper-login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: changeLogin ? /*#__PURE__*/_jsxDEV(InputLogin, {\n                onChangeLogin: this.onChangeLogin,\n                url: url,\n                slug: slug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(InputSignIn, {\n                onChangeLogin: this.onChangeLogin,\n                url: url,\n                slug: slug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routes-place\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: `${url}/login`,\n          children: /*#__PURE__*/_jsxDEV(InputLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${url}/register`,\n          children: /*#__PURE__*/_jsxDEV(InputSignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    changeLogin: state.changeLogin\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onChangeLogin: () => {\n      dispatch(action.onChangeLogin());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/LearnReact/ReactJS-Project/ReactJS/ReactJS/src/Components/LoginPage/ContentLogin/LoginForm.js/LoginForm.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","InputLogin","InputSignIn","connect","action","LoginForm","onChangeLogin","props","render","changeLogin","match","url","slug","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,eAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,6BAAxB;;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCU,aADgC,GAChB,MAAM;AACpB,WAAKC,KAAL,CAAWD,aAAX;AACD,KAH+B;AAAA;;AAKhCE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyB,KAAKH,KAAlC;AACA,QAAII,GAAG,GAAGD,KAAK,CAACC,GAAhB;AACA,QAAIC,IAAI,GAAGH,WAAW,GAAG,UAAH,GAAgB,OAAtC;AACA,wBACE,QAAC,MAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAA2C,QAAA,EAAE,EAAC,cAA9C;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,wBACGA,WAAW,gBACV,QAAC,UAAD;AACE,gBAAA,aAAa,EAAE,KAAKH,aADtB;AAEE,gBAAA,GAAG,EAAEK,GAFP;AAGE,gBAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADU,gBAOV,QAAC,WAAD;AACE,gBAAA,aAAa,EAAE,KAAKN,aADtB;AAEE,gBAAA,GAAG,EAAEK,GAFP;AAGE,gBAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAED,GAAI,QAApB;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAEA,GAAI,WAApB;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AA1C+B;;AA6ClC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,WAAW,EAAEK,KAAK,CAACL;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMM,kBAAkB,GAAG,CAACC,QAAD,EAAWT,KAAX,KAAqB;AAC9C,SAAO;AACLD,IAAAA,aAAa,EAAE,MAAM;AACnBU,MAAAA,QAAQ,CAACZ,MAAM,CAACE,aAAP,EAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeH,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport InputLogin from \"./IputLogin/InputLogin\";\r\nimport InputSignIn from \"./InputSignIn/InputSignIn\";\r\nimport \"./styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"./../../../../Actions/index\";\r\n\r\nclass LoginForm extends Component {\r\n  onChangeLogin = () => {\r\n    this.props.onChangeLogin();\r\n  };\r\n\r\n  render() {\r\n    var { changeLogin, match } = this.props;\r\n    var url = match.url;\r\n    var slug = changeLogin ? \"register\" : \"login\";\r\n    return (\r\n      <Router>\r\n        <div className=\"container-fluid px-0 py-5\" id=\"wapper-login\">\r\n          <div className=\"content-box\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {changeLogin ? (\r\n                  <InputLogin\r\n                    onChangeLogin={this.onChangeLogin}\r\n                    url={url}\r\n                    slug={slug}\r\n                  />\r\n                ) : (\r\n                  <InputSignIn\r\n                    onChangeLogin={this.onChangeLogin}\r\n                    url={url}\r\n                    slug={slug}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"routes-place\">\r\n          <Route path={`${url}/login`}>\r\n            <InputLogin />\r\n          </Route>\r\n          <Route path={`${url}/register`}>\r\n            <InputSignIn />\r\n          </Route>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    changeLogin: state.changeLogin,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onChangeLogin: () => {\r\n      dispatch(action.onChangeLogin());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}