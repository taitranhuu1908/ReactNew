{"ast":null,"code":"import _toConsumableArray from\"C:/Users/emlac/Desktop/ReactNew/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as types from\"./../Constant/ActionTypes\";var initialState=[];var findIndex=function findIndex(products,id){var result=-1;products.forEach(function(product,index){if(product.id===id){result=index;return result;}});return result;};var works=function works(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var index=-1;switch(action.type){case types.GET_WORK:state=_toConsumableArray(action.works);return _toConsumableArray(state);case types.ADD_WORK:state.push(action.work);return _toConsumableArray(state);case types.DELETE_WORK:index=findIndex(state,action.id);if(index!==-1){state.splice(index,1);}return _toConsumableArray(state);case types.UPDATE_WORK:index=findIndex(state,action.work.id);if(index!==-1){state[index]=action.work;}return _toConsumableArray(state);default:return _toConsumableArray(state);}};export default works;","map":{"version":3,"sources":["C:/Users/emlac/Desktop/ReactNew/src/Reducers/works.js"],"names":["types","initialState","findIndex","products","id","result","forEach","product","index","works","state","action","type","GET_WORK","ADD_WORK","push","work","DELETE_WORK","splice","UPDATE_WORK"],"mappings":"0HAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,2BAAvB,CAEA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAWC,EAAX,CAAkB,CAChC,GAAIC,CAAAA,MAAM,CAAG,CAAC,CAAd,CACAF,QAAQ,CAACG,OAAT,CAAiB,SAACC,OAAD,CAAUC,KAAV,CAAoB,CACnC,GAAID,OAAO,CAACH,EAAR,GAAeA,EAAnB,CAAuB,CACrBC,MAAM,CAAGG,KAAT,CACA,MAAOH,CAAAA,MAAP,CACD,CACF,CALD,EAMA,MAAOA,CAAAA,MAAP,CACD,CATD,CAWA,GAAMI,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBT,YAAyB,IAAXU,CAAAA,MAAW,2CAC9C,GAAIH,CAAAA,KAAK,CAAG,CAAC,CAAb,CACA,OAAQG,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,KAAK,CAACa,QAAX,CACEH,KAAK,oBAAOC,MAAM,CAACF,KAAd,CAAL,CACA,0BAAWC,KAAX,EACF,IAAKV,CAAAA,KAAK,CAACc,QAAX,CACEJ,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACK,IAAlB,EACA,0BAAWN,KAAX,EACF,IAAKV,CAAAA,KAAK,CAACiB,WAAX,CACET,KAAK,CAAGN,SAAS,CAACQ,KAAD,CAAQC,MAAM,CAACP,EAAf,CAAjB,CACA,GAAII,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChBE,KAAK,CAACQ,MAAN,CAAaV,KAAb,CAAoB,CAApB,EACD,CACD,0BAAWE,KAAX,EACF,IAAKV,CAAAA,KAAK,CAACmB,WAAX,CACEX,KAAK,CAAGN,SAAS,CAACQ,KAAD,CAAQC,MAAM,CAACK,IAAP,CAAYZ,EAApB,CAAjB,CACA,GAAII,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChBE,KAAK,CAACF,KAAD,CAAL,CAAeG,MAAM,CAACK,IAAtB,CACD,CACD,0BAAWN,KAAX,EACF,QACE,0BAAWA,KAAX,EApBJ,CAsBD,CAxBD,CA0BA,cAAeD,CAAAA,KAAf","sourcesContent":["import * as types from \"./../Constant/ActionTypes\";\r\n\r\nlet initialState = [];\r\n\r\nvar findIndex = (products, id) => {\r\n  var result = -1;\r\n  products.forEach((product, index) => {\r\n    if (product.id === id) {\r\n      result = index;\r\n      return result;\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nconst works = (state = initialState, action) => {\r\n  var index = -1;\r\n  switch (action.type) {\r\n    case types.GET_WORK:\r\n      state = [...action.works];\r\n      return [...state];\r\n    case types.ADD_WORK:\r\n      state.push(action.work);\r\n      return [...state];\r\n    case types.DELETE_WORK:\r\n      index = findIndex(state, action.id);\r\n      if (index !== -1) {\r\n        state.splice(index, 1);\r\n      }\r\n      return [...state];\r\n    case types.UPDATE_WORK:\r\n      index = findIndex(state, action.work.id);\r\n      if (index !== -1) {\r\n        state[index] = action.work;\r\n      }\r\n      return [...state];\r\n    default:\r\n      return [...state];\r\n  }\r\n};\r\n\r\nexport default works;\r\n"]},"metadata":{},"sourceType":"module"}