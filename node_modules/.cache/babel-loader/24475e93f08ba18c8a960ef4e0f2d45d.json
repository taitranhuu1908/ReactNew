{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactNew\\\\ReactJS\\\\src\\\\Components\\\\MemberShip\\\\MemberInput\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Box, Input, InputLabel } from \"@material-ui/core\";\nimport InputForm from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MemberInput() {\n  _s();\n\n  const [inputValue, setInputValue] = useState({\n    code: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    country: \"\",\n    gender: \"\",\n    dob: \"\"\n  });\n  const inputList = [{\n    width: 12,\n    label: \"Personal Invite Code\",\n    type: \"text\",\n    value: inputValue.code,\n    place: \"Customize your Personal Invite Code\",\n    caption: \"PLEASE NOTE: Once you save the code, it can't be changed later, so please make sure it's what you want.\"\n  }, {\n    width: 6,\n    label: \"First Name\",\n    type: \"text\",\n    value: inputValue.firstName,\n    place: \"\",\n    caption: \"\"\n  }, {\n    width: 6,\n    label: \"Last Name\",\n    type: \"text\",\n    value: inputValue.lastName,\n    place: \"\",\n    caption: \"\"\n  }, {\n    width: 12,\n    label: \"Nickname\",\n    type: \"text\",\n    value: inputValue.username,\n    place: \"\",\n    caption: \"\"\n  }, {\n    width: 12,\n    label: \"Email\",\n    type: \"text\",\n    disabled: true,\n    value: inputValue.email,\n    place: \"\",\n    caption: \"\"\n  }, {\n    width: 12,\n    label: \"Country/Region\",\n    type: \"text\",\n    value: inputValue.email,\n    place: \"\",\n    caption: \"\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [inputList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(InputForm, {\n          item: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: props.item.width,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            sx: {\n              color: \"#999\"\n            },\n            children: props.item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: props.item.type,\n            className: \"member-input form-control  shadow-none\",\n            placeholder: props.item.place ? props.item.place : null,\n            disabled: props.item.disabled ? props.item.disabled : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), props.item.caption ? /*#__PURE__*/_jsxDEV(Box, {\n            className: \"form-text color-orange font-ubun\",\n            children: props.item.caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MemberInput, \"HwaZibdPr9sLfWrXtST7u5w2LR0=\");\n\n_c = MemberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberInput\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactNew/ReactJS/src/Components/MemberShip/MemberInput/index.jsx"],"names":["React","useState","Grid","Box","Input","InputLabel","InputForm","MemberInput","inputValue","setInputValue","code","firstName","lastName","username","email","country","gender","dob","inputList","width","label","type","value","place","caption","disabled","map","item","index","props","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Grid, Box, Input, InputLabel } from \"@material-ui/core\";\r\nimport InputForm from \"./Input\";\r\n\r\nexport default function MemberInput() {\r\n  const [inputValue, setInputValue] = useState({\r\n    code: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    country: \"\",\r\n    gender: \"\",\r\n    dob: \"\",\r\n  });\r\n\r\n  const inputList = [\r\n    {\r\n      width: 12,\r\n      label: \"Personal Invite Code\",\r\n      type: \"text\",\r\n      value: inputValue.code,\r\n      place: \"Customize your Personal Invite Code\",\r\n      caption:\r\n        \"PLEASE NOTE: Once you save the code, it can't be changed later, so please make sure it's what you want.\",\r\n    },\r\n    {\r\n      width: 6,\r\n      label: \"First Name\",\r\n      type: \"text\",\r\n      value: inputValue.firstName,\r\n      place: \"\",\r\n      caption: \"\",\r\n    },\r\n    {\r\n      width: 6,\r\n      label: \"Last Name\",\r\n      type: \"text\",\r\n      value: inputValue.lastName,\r\n      place: \"\",\r\n      caption: \"\",\r\n    },\r\n    {\r\n      width: 12,\r\n      label: \"Nickname\",\r\n      type: \"text\",\r\n      value: inputValue.username,\r\n      place: \"\",\r\n      caption: \"\",\r\n    },\r\n    {\r\n      width: 12,\r\n      label: \"Email\",\r\n      type: \"text\",\r\n      disabled: true,\r\n      value: inputValue.email,\r\n      place: \"\",\r\n      caption: \"\",\r\n    },\r\n    {\r\n      width: 12,\r\n      label: \"Country/Region\",\r\n      type: \"text\",\r\n      value: inputValue.email,\r\n      place: \"\",\r\n      caption: \"\",\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        {inputList.map((item, index) => {\r\n          return <InputForm item={item} key={index} />;\r\n        })}\r\n        <Grid item xs={props.item.width}>\r\n          <Box>\r\n            <InputLabel sx={{ color: \"#999\" }}>{props.item.label}</InputLabel>\r\n            <Input\r\n              type={props.item.type}\r\n              className=\"member-input form-control  shadow-none\"\r\n              placeholder={props.item.place ? props.item.place : null}\r\n              disabled={props.item.disabled ? props.item.disabled : false}\r\n            />\r\n            {props.item.caption ? (\r\n              <Box className=\"form-text color-orange font-ubun\">\r\n                {props.item.caption}\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}