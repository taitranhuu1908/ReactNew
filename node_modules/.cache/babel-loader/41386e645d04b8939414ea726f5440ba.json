{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = styleProps;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  padding: 9,\n  borderRadius: '50%'\n}, styleProps.edge === 'start' && {\n  marginLeft: styleProps.size === 'small' ? -3 : -12\n}, styleProps.edge === 'end' && {\n  marginRight: styleProps.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\r\n * @ignore - internal component.\r\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\r\n   * If `true`, the `input` element is focused during the first mount.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the component is checked.\r\n   */\n  checked: PropTypes.bool,\n\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\r\n   * If `true`, the component is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the  keyboard focus ripple is disabled.\r\n   * @default false\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If given, uses a negative margin to counteract the padding on one\r\n   * side (this is often helpful for aligning the left or right\r\n   * side of the icon with content above or below, without ruining the border\r\n   * size and shape).\r\n   * @default false\r\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\r\n   * The id of the `input` element.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\n  inputProps: PropTypes.object,\n\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\n  inputRef: refType,\n\n  /*\r\n   * @ignore\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * It prevents the user from changing the value of the field\r\n   * (not from interacting with the field).\r\n   */\n  readOnly: PropTypes.bool,\n\n  /**\r\n   * If `true`, the `input` element is required.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The input component prop `type`.\r\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\r\n   * The value of the component.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/ReactNew/node_modules/@material-ui/core/internal/SwitchBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","capitalize","styled","useControlled","useFormControl","ButtonBase","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","checked","disabled","edge","slots","root","input","SwitchBaseRoot","skipSx","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","setCheckedState","controlled","default","Boolean","state","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","target","hasLabelFor","component","centerRipple","focusRipple","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOf","func","sx","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport capitalize from '../utils/capitalize';\r\nimport styled from '../styles/styled';\r\nimport useControlled from '../utils/useControlled';\r\nimport useFormControl from '../FormControl/useFormControl';\r\nimport ButtonBase from '../ButtonBase';\r\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    checked,\r\n    disabled,\r\n    edge\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\r\n    input: ['input']\r\n  };\r\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\r\n};\r\n\r\nconst SwitchBaseRoot = styled(ButtonBase, {\r\n  skipSx: true\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  padding: 9,\r\n  borderRadius: '50%'\r\n}, styleProps.edge === 'start' && {\r\n  marginLeft: styleProps.size === 'small' ? -3 : -12\r\n}, styleProps.edge === 'end' && {\r\n  marginRight: styleProps.size === 'small' ? -3 : -12\r\n}));\r\nconst SwitchBaseInput = styled('input', {\r\n  skipSx: true\r\n})({\r\n  /* Styles applied to the internal input element. */\r\n  cursor: 'inherit',\r\n  position: 'absolute',\r\n  opacity: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  top: 0,\r\n  left: 0,\r\n  margin: 0,\r\n  padding: 0,\r\n  zIndex: 1\r\n});\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\r\n  const {\r\n    autoFocus,\r\n    checked: checkedProp,\r\n    checkedIcon,\r\n    className,\r\n    defaultChecked,\r\n    disabled: disabledProp,\r\n    disableFocusRipple = false,\r\n    edge = false,\r\n    icon,\r\n    id,\r\n    inputProps,\r\n    inputRef,\r\n    name,\r\n    onBlur,\r\n    onChange,\r\n    onFocus,\r\n    readOnly,\r\n    required,\r\n    tabIndex,\r\n    type,\r\n    value\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const [checked, setCheckedState] = useControlled({\r\n    controlled: checkedProp,\r\n    default: Boolean(defaultChecked),\r\n    name: 'SwitchBase',\r\n    state: 'checked'\r\n  });\r\n  const muiFormControl = useFormControl();\r\n\r\n  const handleFocus = event => {\r\n    if (onFocus) {\r\n      onFocus(event);\r\n    }\r\n\r\n    if (muiFormControl && muiFormControl.onFocus) {\r\n      muiFormControl.onFocus(event);\r\n    }\r\n  };\r\n\r\n  const handleBlur = event => {\r\n    if (onBlur) {\r\n      onBlur(event);\r\n    }\r\n\r\n    if (muiFormControl && muiFormControl.onBlur) {\r\n      muiFormControl.onBlur(event);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    // Workaround for https://github.com/facebook/react/issues/9023\r\n    if (event.nativeEvent.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setCheckedState(event.target.checked);\r\n\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n  };\r\n\r\n  let disabled = disabledProp;\r\n\r\n  if (muiFormControl) {\r\n    if (typeof disabled === 'undefined') {\r\n      disabled = muiFormControl.disabled;\r\n    }\r\n  }\r\n\r\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\r\n\r\n  const styleProps = _extends({}, props, {\r\n    checked,\r\n    disabled,\r\n    disableFocusRipple,\r\n    edge\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\r\n    component: \"span\",\r\n    className: clsx(classes.root, className),\r\n    centerRipple: true,\r\n    focusRipple: !disableFocusRipple,\r\n    disabled: disabled,\r\n    tabIndex: null,\r\n    role: undefined,\r\n    onFocus: handleFocus,\r\n    onBlur: handleBlur,\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other, {\r\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\r\n      autoFocus: autoFocus,\r\n      checked: checkedProp,\r\n      defaultChecked: defaultChecked,\r\n      className: classes.input,\r\n      disabled: disabled,\r\n      id: hasLabelFor && id,\r\n      name: name,\r\n      onChange: handleInputChange,\r\n      readOnly: readOnly,\r\n      ref: inputRef,\r\n      required: required,\r\n      styleProps: styleProps,\r\n      tabIndex: tabIndex,\r\n      type: type,\r\n      value: value\r\n    }, inputProps)), checked ? checkedIcon : icon]\r\n  }));\r\n}); // NB: If changed, please update Checkbox, Switch and Radio\r\n// so that the API documentation is updated.\r\n\r\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\r\n  /**\r\n   * If `true`, the `input` element is focused during the first mount.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component is checked.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon to display when the component is checked.\r\n   */\r\n  checkedIcon: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  defaultChecked: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the  keyboard focus ripple is disabled.\r\n   * @default false\r\n   */\r\n  disableFocusRipple: PropTypes.bool,\r\n\r\n  /**\r\n   * If given, uses a negative margin to counteract the padding on one\r\n   * side (this is often helpful for aligning the left or right\r\n   * side of the icon with content above or below, without ruining the border\r\n   * size and shape).\r\n   * @default false\r\n   */\r\n  edge: PropTypes.oneOf(['end', 'start', false]),\r\n\r\n  /**\r\n   * The icon to display when the component is unchecked.\r\n   */\r\n  icon: PropTypes.node.isRequired,\r\n\r\n  /**\r\n   * The id of the `input` element.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\r\n   */\r\n  inputProps: PropTypes.object,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /*\r\n   * @ignore\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * It prevents the user from changing the value of the field\r\n   * (not from interacting with the field).\r\n   */\r\n  readOnly: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the `input` element is required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /**\r\n   * The input component prop `type`.\r\n   */\r\n  type: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * The value of the component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}