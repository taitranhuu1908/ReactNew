{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactJS-Project\\\\ReactJS\\\\ReactJS\\\\src\\\\Components\\\\AdminPage\\\\HightCharts\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"./../../../Actions\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateProducts = products => {\n  var aorus = 0;\n  var nvidia = 0;\n  var amd = 0;\n  products.forEach(item => {\n    if (item.aorus) {\n      aorus = aorus + 1;\n    }\n\n    if (item.nvidia) {\n      nvidia = nvidia + 1;\n    }\n\n    if (item.amd) {\n      amd = amd + 1;\n    }\n  });\n  return {\n    chart: {\n      type: \"pie\"\n    },\n    title: {\n      text: \"Product Statistics\"\n    },\n    colors: [\"#ff4600\", \"#76b900\", \"#a60d13\"],\n    caption: {\n      text: \"The number of products\"\n    },\n    xAxis: {\n      categories: [\"AORUS\", \"NVIDIA\", \"AMD\"]\n    },\n    series: [{\n      name: \"Brands\",\n      colorByPoint: true,\n      data: [{\n        name: \"AORUS\",\n        y: aorus\n      }, {\n        name: \"NVIDIA\",\n        y: nvidia\n      }, {\n        name: \"AMD\",\n        y: amd\n      }]\n    }]\n  };\n};\n\nexport default function HightCharts() {\n  _s();\n\n  const [options, setOptions] = useState({});\n  const products = useSelector(state => state.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.acFetchProductsRequest());\n  }, []);\n  useEffect(() => {\n    setOptions(generateProducts(products));\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HightCharts, \"vkTO4txfwhAwxYAp+SKwKR0PGzE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = HightCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"HightCharts\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactJS-Project/ReactJS/ReactJS/src/Components/AdminPage/HightCharts/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","actions","Highcharts","HighchartsReact","generateProducts","products","aorus","nvidia","amd","forEach","item","chart","type","title","text","colors","caption","xAxis","categories","series","name","colorByPoint","data","y","HightCharts","options","setOptions","state","dispatch","acFetchProductsRequest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;AAEA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACrC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,GAAG,GAAG,CAAV;AACAH,EAAAA,QAAQ,CAACI,OAAT,CAAkBC,IAAD,IAAU;AACzB,QAAIA,IAAI,CAACJ,KAAT,EAAgB;AACdA,MAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACD;;AACD,QAAII,IAAI,CAACH,MAAT,EAAiB;AACfA,MAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AACD;;AACD,QAAIG,IAAI,CAACF,GAAT,EAAc;AACZA,MAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACD;AACF,GAVD;AAWA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADF;AAILC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAJF;AAQLC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CARH;AASLC,IAAAA,OAAO,EAAE;AACPF,MAAAA,IAAI,EAAE;AADC,KATJ;AAYLG,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB;AADP,KAZF;AAeLC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,YAAY,EAAE,IAFhB;AAGEC,MAAAA,IAAI,EAAE,CACJ;AACEF,QAAAA,IAAI,EAAE,OADR;AAEEG,QAAAA,CAAC,EAAEjB;AAFL,OADI,EAKJ;AACEc,QAAAA,IAAI,EAAE,QADR;AAEEG,QAAAA,CAAC,EAAEhB;AAFL,OALI,EASJ;AACEa,QAAAA,IAAI,EAAE,KADR;AAEEG,QAAAA,CAAC,EAAEf;AAFL,OATI;AAHR,KADM;AAfH,GAAP;AAoCD,CAnDD;;AAqDA,eAAe,SAASgB,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,CAAE4B,KAAD,IAAWA,KAAK,CAACtB,QAAlB,CAA5B;AACA,QAAMuB,QAAQ,GAAG5B,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,QAAQ,CAAC3B,OAAO,CAAC4B,sBAAR,EAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA/B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,UAAU,CAACtB,gBAAgB,CAACC,QAAD,CAAjB,CAAV;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAEH,UAA7B;AAAyC,MAAA,OAAO,EAAEuB;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhBuBD,W;UAELzB,W,EACAC,W;;;KAHKwB,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"./../../../Actions\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nconst generateProducts = (products) => {\r\n  var aorus = 0;\r\n  var nvidia = 0;\r\n  var amd = 0;\r\n  products.forEach((item) => {\r\n    if (item.aorus) {\r\n      aorus = aorus + 1;\r\n    }\r\n    if (item.nvidia) {\r\n      nvidia = nvidia + 1;\r\n    }\r\n    if (item.amd) {\r\n      amd = amd + 1;\r\n    }\r\n  });\r\n  return {\r\n    chart: {\r\n      type: \"pie\",\r\n    },\r\n    title: {\r\n      text: \"Product Statistics\",\r\n    },\r\n\r\n    colors: [\"#ff4600\", \"#76b900\", \"#a60d13\"],\r\n    caption: {\r\n      text: \"The number of products\",\r\n    },\r\n    xAxis: {\r\n      categories: [\"AORUS\", \"NVIDIA\", \"AMD\"],\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Brands\",\r\n        colorByPoint: true,\r\n        data: [\r\n          {\r\n            name: \"AORUS\",\r\n            y: aorus,\r\n          },\r\n          {\r\n            name: \"NVIDIA\",\r\n            y: nvidia,\r\n          },\r\n          {\r\n            name: \"AMD\",\r\n            y: amd,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport default function HightCharts() {\r\n  const [options, setOptions] = useState({});\r\n  const products = useSelector((state) => state.products);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(actions.acFetchProductsRequest());\r\n  }, []);\r\n  useEffect(() => {\r\n    setOptions(generateProducts(products));\r\n  }, [products]);\r\n\r\n  return (\r\n    <div>\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}