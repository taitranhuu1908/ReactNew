{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactJS-Project\\\\ReactJS\\\\ReactJS\\\\src\\\\Components\\\\AdminPage\\\\Users\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./styles.scss\";\nimport callApi from \"./../../../utils/apiCaller\";\nimport * as actions from \"./../../../Actions\";\nimport User from \"./User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [usersAdmin, setUsersAdmin] = useState([]);\n  const [usersCustomer, setUsersCustomer] = useState([]);\n  const [newList, setNewList] = useState([]);\n  useEffect(() => {\n    (async () => {\n      callApi(\"usersAdmin\", \"GET\", null).then(res => {\n        setUsersAdmin(res.data);\n        setNewList(res.data);\n      });\n      callApi(\"users\", \"GET\", null).then(res => {\n        setUsersCustomer(res.data);\n        setNewList(...newList, res.data);\n      });\n    })();\n  }, []); // var newList = [];\n  // newList = usersAdmin.concat(usersCustomer);\n\n  var listUsers = users => {\n    return users.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        user: user,\n        removeAccount: removeAccount,\n        index: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const findIndex = (id, list, role) => {\n    var result = -1;\n\n    if (role === \"admin\") {\n      list.map((item, index) => {\n        if (item.id === id) {\n          return result = index;\n        }\n      });\n    } else {\n      list.map((item, index) => {\n        if (item.id === id) {\n          return result = index;\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const removeAccount = (id, role) => {\n    if (role === \"admin\") {\n      // callApi(`usersAdmin/${id}`, \"DELETE\", null).then((res) => {\n      //   console.log(res.data);\n      // });\n      var index = findIndex(id, usersAdmin, role);\n      console.log(index);\n      return;\n    } else {\n      var index = findIndex(id, usersCustomer, role);\n      usersCustomer.splice(index, 1);\n      setNewList(usersAdmin.concat(usersCustomer));\n      console.log(newList);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5\",\n    id: \"manager-users\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-ubun\",\n            children: \"Manager Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"STT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: \"2\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: listUsers(newList)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"B8F/sDyXQPdV20RvFLtBUZe3AbI=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactJS-Project/ReactJS/ReactJS/src/Components/AdminPage/Users/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","callApi","actions","User","Index","usersAdmin","setUsersAdmin","usersCustomer","setUsersCustomer","newList","setNewList","then","res","data","listUsers","users","map","user","index","removeAccount","findIndex","id","list","role","result","item","console","log","splice","concat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport callApi from \"./../../../utils/apiCaller\";\r\nimport * as actions from \"./../../../Actions\";\r\nimport User from \"./User\";\r\n\r\nconst Index = () => {\r\n  const [usersAdmin, setUsersAdmin] = useState([]);\r\n  const [usersCustomer, setUsersCustomer] = useState([]);\r\n  const [newList, setNewList] = useState([]);\r\n  useEffect(() => {\r\n    (async () => {\r\n      callApi(\"usersAdmin\", \"GET\", null).then((res) => {\r\n        setUsersAdmin(res.data);\r\n        setNewList(res.data);\r\n      });\r\n      callApi(\"users\", \"GET\", null).then((res) => {\r\n        setUsersCustomer(res.data);\r\n        setNewList(...newList, res.data);\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  // var newList = [];\r\n  // newList = usersAdmin.concat(usersCustomer);\r\n\r\n  var listUsers = (users) => {\r\n    return users.map((user, index) => {\r\n      return (\r\n        <User\r\n          user={user}\r\n          key={index}\r\n          removeAccount={removeAccount}\r\n          index={index + 1}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const findIndex = (id, list, role) => {\r\n    var result = -1;\r\n\r\n    if (role === \"admin\") {\r\n      list.map((item, index) => {\r\n        if (item.id === id) {\r\n          return (result = index);\r\n        }\r\n      });\r\n    } else {\r\n      list.map((item, index) => {\r\n        if (item.id === id) {\r\n          return (result = index);\r\n        }\r\n      });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const removeAccount = (id, role) => {\r\n    if (role === \"admin\") {\r\n      // callApi(`usersAdmin/${id}`, \"DELETE\", null).then((res) => {\r\n      //   console.log(res.data);\r\n      // });\r\n      var index = findIndex(id, usersAdmin, role);\r\n      console.log(index);\r\n      return;\r\n    } else {\r\n      var index = findIndex(id, usersCustomer, role);\r\n      usersCustomer.splice(index, 1);\r\n      setNewList(usersAdmin.concat(usersCustomer));\r\n      console.log(newList);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\" id=\"manager-users\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center\">\r\n            <h3 className=\"font-ubun\">Manager Users</h3>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>STT</th>\r\n                  <th>Email</th>\r\n                  <th colSpan=\"2\">Password</th>\r\n                  <th>Role</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{listUsers(newList)}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}