{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MT COM\\\\Desktop\\\\ReactNew\\\\ReactJS\\\\src\\\\Components\\\\AdminPage\\\\Admin\\\\Home\\\\Tasks\\\\TaskUsers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography } from \"@material-ui/core\";\nimport * as actions from \"./../../../../../../Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskUsers() {\n  _s();\n\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const now = new moment();\n\n  if (users.length > 0) {\n    console.log(moment(users[0].date).fromNow().indexOf(\"hours ago\") !== -1);\n    console.log(moment(users[1].date).fromNow().indexOf(\"hours ago\") !== -1);\n  }\n\n  useEffect(() => {\n    dispatch(actions.acGetUsersRequest());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: users.map((user, index) => {\n        if (moment(users.date).fromNow().indexOf(\"hours ago\") === -1) {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskUsers, \"N0SeCBd1xQV/Y3oSFyV14pCI5TA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskUsers\");","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactNew/ReactJS/src/Components/AdminPage/Admin/Home/Tasks/TaskUsers/index.js"],"names":["React","useEffect","useDispatch","useSelector","moment","Table","TableHead","TableBody","TableRow","TableCell","Typography","actions","TaskUsers","users","state","dispatch","now","length","console","log","date","fromNow","indexOf","acGetUsersRequest","map","user","index","id","email","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,UANF,QAOO,mBAPP;AAQA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,GAAG,GAAG,IAAIZ,MAAJ,EAAZ;;AAEA,MAAIS,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACS,KAAK,CAAC,CAAD,CAAL,CAASO,IAAV,CAAN,CAAsBC,OAAtB,GAAgCC,OAAhC,CAAwC,WAAxC,MAAyD,CAAC,CAAtE;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACS,KAAK,CAAC,CAAD,CAAL,CAASO,IAAV,CAAN,CAAsBC,OAAtB,GAAgCC,OAAhC,CAAwC,WAAxC,MAAyD,CAAC,CAAtE;AACD;;AACDrB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACJ,OAAO,CAACY,iBAAR,EAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,SAAD;AAAA,gBACGV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,YAAItB,MAAM,CAACS,KAAK,CAACO,IAAP,CAAN,CAAmBC,OAAnB,GAA6BC,OAA7B,CAAqC,WAArC,MAAsD,CAAC,CAA3D,EAA8D;AAC5D;AACD;;AACD,4BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAYG,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA,sBAAYF,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA,sBAAYH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA,sBAAYJ,IAAI,CAACL;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAeM,KAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAxCuBd,S;UACRT,W,EACGD,W;;;KAFKU,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport * as actions from \"./../../../../../../Actions\";\n\nexport default function TaskUsers() {\n  const users = useSelector((state) => state.users);\n  const dispatch = useDispatch();\n  const now = new moment();\n\n  if (users.length > 0) {\n    console.log(moment(users[0].date).fromNow().indexOf(\"hours ago\") !== -1);\n    console.log(moment(users[1].date).fromNow().indexOf(\"hours ago\") !== -1);\n  }\n  useEffect(() => {\n    dispatch(actions.acGetUsersRequest());\n  }, []);\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ID</TableCell>\n          <TableCell>Email</TableCell>\n          <TableCell>Username</TableCell>\n          <TableCell>Date</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {users.map((user, index) => {\n          if (moment(users.date).fromNow().indexOf(\"hours ago\") === -1) {\n            return;\n          }\n          return (\n            <TableRow key={index}>\n              <TableCell>{user.id}</TableCell>\n              <TableCell>{user.email}</TableCell>\n              <TableCell>{user.username}</TableCell>\n              <TableCell>{user.date}</TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}