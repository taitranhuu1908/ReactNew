{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var alignItems = styleProps.alignItems,\n      classes = styleProps.classes;\n  var slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nvar ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var styleProps = props.styleProps;\n    return [styles.root, styleProps.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(function (_ref) {\n  var styleProps = _ref.styleProps;\n  return _extends({\n    /* Styles applied to the root element. */\n    minWidth: 56,\n    flexShrink: 0\n  }, styleProps.alignItems === 'flex-start' && {\n    marginTop: 8\n  });\n});\n/**\r\n * A simple wrapper to apply `List` styles to an `Avatar`.\r\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  var className = props.className,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var context = React.useContext(ListContext);\n\n  var styleProps = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component, normally an `Avatar`.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemAvatar;","map":{"version":3,"sources":["C:/Users/emlac/Desktop/ReactNew/node_modules/@material-ui/core/ListItemAvatar/ListItemAvatar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","ListContext","styled","useThemeProps","getListItemAvatarUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","alignItems","classes","slots","root","ListItemAvatarRoot","name","slot","overridesResolver","props","styles","alignItemsFlexStart","minWidth","flexShrink","marginTop","ListItemAvatar","forwardRef","inProps","ref","className","other","context","useContext","process","env","NODE_ENV","propTypes","children","node","object","string","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"className\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport ListContext from '../List/ListContext';\r\nimport styled from '../styles/styled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    alignItems,\r\n    classes\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\r\n  };\r\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\r\n};\r\n\r\nconst ListItemAvatarRoot = styled('div', {\r\n  name: 'MuiListItemAvatar',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      styleProps\r\n    } = props;\r\n    return [styles.root, styleProps.alignItems === 'flex-start' && styles.alignItemsFlexStart];\r\n  }\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  minWidth: 56,\r\n  flexShrink: 0\r\n}, styleProps.alignItems === 'flex-start' && {\r\n  marginTop: 8\r\n}));\r\n/**\r\n * A simple wrapper to apply `List` styles to an `Avatar`.\r\n */\r\n\r\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiListItemAvatar'\r\n  });\r\n\r\n  const {\r\n    className\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const context = React.useContext(ListContext);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    alignItems: context.alignItems\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component, normally an `Avatar`.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default ListItemAvatar;"]},"metadata":{},"sourceType":"module"}