{"ast":null,"code":"import * as types from \"../Constant/ActionTypes\";\nvar initialState = [];\n\nvar findIndex = (id, list) => {\n  var result = -1;\n  list.forEach((item, index) => {\n    if (item.id === id) {\n      return result = index;\n    }\n  });\n  return result;\n};\n\nconst usersAdmin = (state = initialState, action) => {\n  switch (action.type) {\n    case types.REGISTER:\n      state.push(action.user);\n      return [...state];\n\n    case types.GET_USERS:\n      state = [...action.users];\n      return [...state];\n\n    case types.UPDATE_USER:\n      var index = findIndex(action.user.id, state);\n      state[index] = action.user;\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nexport default usersAdmin;","map":{"version":3,"sources":["C:/Users/MT COM/Desktop/ReactJS-Project/ReactJS/ReactJS/src/Reducers/usersAdmin.js"],"names":["types","initialState","findIndex","id","list","result","forEach","item","index","usersAdmin","state","action","type","REGISTER","push","user","GET_USERS","users","UPDATE_USER"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,IAAIC,SAAS,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc;AAC5B,MAAIC,MAAM,GAAG,CAAC,CAAd;AAEAD,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,QAAID,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB;AAClB,aAAQE,MAAM,GAAGG,KAAjB;AACD;AACF,GAJD;AAMA,SAAOH,MAAP;AACD,CAVD;;AAYA,MAAMI,UAAU,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,KAAK,CAACa,QAAX;AACEH,MAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACI,IAAlB;AACA,aAAO,CAAC,GAAGL,KAAJ,CAAP;;AACF,SAAKV,KAAK,CAACgB,SAAX;AACEN,MAAAA,KAAK,GAAG,CAAC,GAAGC,MAAM,CAACM,KAAX,CAAR;AACA,aAAO,CAAC,GAAGP,KAAJ,CAAP;;AACF,SAAKV,KAAK,CAACkB,WAAX;AACE,UAAIV,KAAK,GAAGN,SAAS,CAACS,MAAM,CAACI,IAAP,CAAYZ,EAAb,EAAiBO,KAAjB,CAArB;AACAA,MAAAA,KAAK,CAACF,KAAD,CAAL,GAAeG,MAAM,CAACI,IAAtB;AACA,aAAO,CAAC,GAAGL,KAAJ,CAAP;;AACF;AACE,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,UAAf","sourcesContent":["import * as types from \"../Constant/ActionTypes\";\r\n\r\nvar initialState = [];\r\n\r\nvar findIndex = (id, list) => {\r\n  var result = -1;\r\n\r\n  list.forEach((item, index) => {\r\n    if (item.id === id) {\r\n      return (result = index);\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nconst usersAdmin = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.REGISTER:\r\n      state.push(action.user);\r\n      return [...state];\r\n    case types.GET_USERS:\r\n      state = [...action.users];\r\n      return [...state];\r\n    case types.UPDATE_USER:\r\n      var index = findIndex(action.user.id, state);\r\n      state[index] = action.user;\r\n      return [...state];\r\n    default:\r\n      return [...state];\r\n  }\r\n};\r\n\r\nexport default usersAdmin;\r\n"]},"metadata":{},"sourceType":"module"}